pipeline {
    agent any

    environment {
        DOCKER_CREDENTIALS_ID = 'docker_credential_foru' // 'docker-tojenkins'
        DOCKER_IMAGE = 'jeanpierrecaleb/simple-flask'
        DOCKER_TAG = 'v1' // You can use a dynamic tag based on the build number or git commit hash
        WEB_SERVER_IP = '192.168.1.94'
        WEB_SERVER_USER = 'userver-01'
        // DEPLOY_SCRIPT_PATH = '/path/to/your/deploy/script.sh'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from the repository
                // checkout scm
                // git url: 'https://github.com/jeanpierrecaleb/my-snd-projects/', branch: 'main'
                // Checkout the code from the Git repository
                git url: 'https://github.com/jeanpierrecaleb/trf-projects.git', branch: 'main'
                
            }
        }
        
         stage('List Files') {
            steps {
                script {
                    bat 'dir'  // or sh 'ls -al' for Unix-like systems
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}", '.')
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Log in to DockerHub
                    withDockerRegistry(credentialsId: "${DOCKER_CREDENTIALS_ID}", url: '') {
                        // Push the Docker image to DockerHub
                        docker.image("${DOCKER_IMAGE}:${DOCKER_TAG}").push("${DOCKER_TAG}")
                    }
                }
            }
        }

        stage('Deploy to Web Server') {
            steps {
                script {
                    // Deploy the Docker image to the web server
                    sshagent(['userver-key-01']) {
                        sh """
                        ssh ${WEB_SERVER_USER}@${WEB_SERVER_IP} <<EOF
                        docker pull ${DOCKER_IMAGE}:${DOCKER_TAG}
                        docker stop your-container-name || true
                        docker rm your-container-name || true
                        docker run -d --name your-container-name -p 5000:5000 ${DOCKER_IMAGE}:${DOCKER_TAG}
                        EOF
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            // Clean up after the build
            cleanWs()
        }
    }
}